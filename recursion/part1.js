/**
 *  첫번째 숫자만 짝수인지 또는 홀수인지 판단해 주겠다고 했을때
 *  배열전체에 홀수가 존재하는지에 대해 궁금하다
 *  그럴때 하나씩 제거해 가면서 홀수인지 판단 -> 없다는걸 발견
 *
 *  (3142 5798 6550 5914)   No odds
 *  (5798 6550 5914)  No odds
 *  (6550 5914)  No odds
 *  (5914)  No odds
 *  ()  No odds
 *  홀수가 존재하지 않음
 *  재귀를 발견하게 됨
 *
 *  기본개념은 한가지 문제를 가지고 어떤 종료점에 도달할 때까지 더 작은 부분이나 변경되는 부분에서 반복적으로 수행한다.
 *  종료점을 종료조건이라고 부름
 *
 */

// 재귀함수 작성의 반드시 필요한 두가지 요소
// 호출스택 과 재귀가 어떤 관련이 있는지
// 헬퍼메소드 재귀 순수재귀

/**
 * 재귀의 정의
 * 재귀는 자기자신을 호출하는 함수 ( 자바스크립트나 코드를 가지고 하는 모든 일)
 * 계속 반복되니까 종료점이 필요하다. (무한 루프랑은 다름)
 *
 */

// 재귀사용하는 예시
// JSON.parse / JSON.stringify
// document.getElementById and Dom traversal
// Object traversal
// We will see it with more complex data structures
// 반복대신 재귀를 사용하는게 더 깔끔할 수 있음

// 재귀를 사용해야하는 이유?
// 보다 어려운 데이터 구조를 다루게 되고 , 직접 parse함수나 getElementById 함수를 작성할때 정말 중요하다.
// 트리를 순회하는 걸 예로 들 수 있다.
